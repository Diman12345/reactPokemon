{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/wardiman/Documents/React/pokemon/src/containers/PokemonList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport _, { subtract } from \"lodash\";\nimport { GetPokemonList, GetPokemon } from \"../actions/pokemonActions\";\nimport { Link } from \"react-router-dom\";\nimport ReactPaginate from \"react-paginate\";\nimport Card from \"../components/Card\";\nimport { getPokemon, getAllPokemon } from '../services/pokemon';\nimport '../App.css';\nimport typeColors from '../helpers/typeColors';\nimport { axios } from \"axios\";\n\nconst PokemonList = props => {\n  _s();\n\n  const [search, setSearch] = useState(\"\");\n  const [pokemonData, setPokemonData] = useState([]);\n  const dispatch = useDispatch();\n  const pokemonState = useSelector(state => state.Pokemon);\n  const pokemonList = useSelector(state => state.PokemonList);\n  const initialUrl = 'https://pokeapi.co/api/v2/pokemon';\n  const [wildPokemon, setWildPokemon] = useState({});\n  React.useEffect(() => {\n    FetchData(1);\n  }, []); // useEffect(() => {\n  //     encounterWildPokemon()\n  //   }, []);\n\n  const pokeId = () => {\n    const min = Math.ceil(1);\n    const max = Math.floor(151);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  };\n\n  const encounterWildPokemon = () => {\n    axios.get('https://pokeapi.co/api/v2/pokemon/' + pokeId()).then(response => {\n      setWildPokemon(response.data);\n    });\n  };\n\n  const FetchData = (page = 1) => {\n    dispatch(GetPokemonList(page));\n  };\n\n  const ShowData = () => {\n    if (pokemonList.loading) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 20\n      }, this);\n    }\n\n    if (!_.isEmpty(pokemonList.data)) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-wrapper grid-container\",\n        children: pokemonList.data.map(el => {\n          const url = el.url;\n          let str = el.url;\n          let subStr = str.substring(34, 35);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pokemon-item Card\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [el.name, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 46\n              }, this), el.url, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 46\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 53\n              }, this), subStr, /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/\" + subStr + \".png\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: `/Pokemon/${el.name}`,\n                style: {\n                  textDecorationLine: \"underline\"\n                },\n                className: \"Card__view\",\n                children: \"View\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this);\n    }\n\n    if (pokemonList.errorMsg !== \"\") {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: pokemonList.errorMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 24\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"unable to get data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 20\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Search: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setSearch(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => props.history.push(`/pokemon/${search}`),\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), ShowData(), !_.isEmpty(pokemonList.data) && /*#__PURE__*/_jsxDEV(ReactPaginate, {\n      pageCount: Math.ceil(pokemonList.count / 15),\n      pageRangeDisplayed: 2,\n      marginPagesDisplayed: 1,\n      onPageChange: data => FetchData(data.selected + 1),\n      containerClassName: \"pagination\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 13\n  }, this);\n};\n\n_s(PokemonList, \"b+4ooYkk32Jeq2L65yzZ+V9avX0=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = PokemonList;\nexport default PokemonList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PokemonList\");","map":{"version":3,"sources":["/Users/wardiman/Documents/React/pokemon/src/containers/PokemonList.js"],"names":["React","useState","useDispatch","useSelector","_","subtract","GetPokemonList","GetPokemon","Link","ReactPaginate","Card","getPokemon","getAllPokemon","typeColors","axios","PokemonList","props","search","setSearch","pokemonData","setPokemonData","dispatch","pokemonState","state","Pokemon","pokemonList","initialUrl","wildPokemon","setWildPokemon","useEffect","FetchData","pokeId","min","Math","ceil","max","floor","random","encounterWildPokemon","get","then","response","data","page","ShowData","loading","isEmpty","map","el","url","str","subStr","substring","name","textDecorationLine","errorMsg","e","target","value","history","push","count","selected"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport _, { subtract } from \"lodash\";\nimport {GetPokemonList, GetPokemon} from \"../actions/pokemonActions\";\nimport {Link} from \"react-router-dom\";\nimport ReactPaginate from \"react-paginate\";\nimport Card from \"../components/Card\";\nimport { getPokemon, getAllPokemon } from '../services/pokemon';\nimport '../App.css';\nimport typeColors from '../helpers/typeColors';\nimport { axios } from \"axios\";\n\nconst PokemonList = (props) => {\n    const [search, setSearch] = useState(\"\");\n    const [pokemonData, setPokemonData] = useState([]);\n    const dispatch = useDispatch();\n    const pokemonState = useSelector(state => state.Pokemon);\n    const pokemonList = useSelector(state => state.PokemonList);\n    const initialUrl = 'https://pokeapi.co/api/v2/pokemon'\n    const [wildPokemon, setWildPokemon] = useState({});\n\n    React.useEffect(() => {\n        FetchData(1)\n        \n    }, []);\n\n    // useEffect(() => {\n    //     encounterWildPokemon()\n    //   }, []);\n\n    const pokeId = () => {\n        const min = Math.ceil(1)\n        const max = Math.floor(151)\n        return Math.floor(Math.random() * (max - min + 1)) + min\n      }\n\n    const encounterWildPokemon = () => {\n        axios\n          .get('https://pokeapi.co/api/v2/pokemon/' + pokeId())\n          .then(response => {\n            setWildPokemon(response.data);\n          })\n      }\n\n    const FetchData = (page = 1) => {\n        dispatch(GetPokemonList(page))\n      }\n    \n        const ShowData = () => {\n\n            if (pokemonList.loading) {\n            return <p>Loading...</p>\n            }\n        \n            if (!_.isEmpty(pokemonList.data)) {\n                \n                return(\n                    <div className={\"list-wrapper grid-container\"}>\n                        {\n                         pokemonList.data.map(el => {\n                            const url = el.url;\n                            let str = el.url;\n                            let subStr = str.substring(34,35);\n                            return(\n                            \n                            <div className={\"pokemon-item Card\"}>\n                                <p>{el.name} <br/> \n                                    {el.url} <br /> <br />\n                                    {subStr}\n                                    <img src= {\"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/\" + subStr + \".png\"}/>\n                                    <Link to={`/Pokemon/${el.name}`} style={{textDecorationLine: \"underline\"}} className=\"Card__view\">View</Link>\n                                </p>\n                                \n                            </div>\n                            )\n                        })}\n                        \n                    </div>\n                    \n                )\n            }\n            \n            if (pokemonList.errorMsg !== \"\") {\n                return <p>{pokemonList.errorMsg}</p>\n            }\n        \n            return <p>unable to get data</p>\n        };\n\n        return(\n            <div>\n            <div className={\"search-wrapper\"}>\n                <p>Search: </p>\n                <input type=\"text\" onChange={e => setSearch(e.target.value)}/>\n                <button onClick={() => props.history.push(`/pokemon/${search}`)}>Search</button>\n            </div>\n            {ShowData()}\n            {!_.isEmpty(pokemonList.data) && (\n                <ReactPaginate\n                pageCount={Math.ceil(pokemonList.count / 15)}\n                pageRangeDisplayed={2}\n                marginPagesDisplayed={1}\n                onPageChange={(data) => FetchData(data.selected + 1)}\n                containerClassName={\"pagination\"}\n                />\n            )}\n            </div>\n        )\n\n};\n\nexport default PokemonList"]},"metadata":{},"sourceType":"module"}