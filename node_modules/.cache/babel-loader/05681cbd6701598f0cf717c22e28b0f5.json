{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/wardiman/Documents/React/pokemon/src/containers/PokemonList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport _ from \"lodash\";\nimport { GetPokemonList, GetPokemon } from \"../actions/pokemonActions\";\nimport { Link } from \"react-router-dom\";\nimport ReactPaginate from \"react-paginate\";\nimport Card from \"../components/Card\";\n\nconst PokemonList = props => {\n  _s();\n\n  const [search, setSearch] = useState(\"\");\n  const dispatch = useDispatch();\n  const pokemonName = props.match.params.pokemon;\n  const pokemonState = useSelector(state => state.Pokemon);\n  const pokemonList = useSelector(state => state.PokemonList);\n  React.useEffect(() => {\n    FetchData(1);\n  }, []);\n  React.useEffect(() => {\n    dispatch(GetPokemon(pokemonName));\n  }, []);\n\n  const FetchData = (page = 1) => {\n    dispatch(GetPokemonList(page));\n  };\n\n  const ShowData = () => {\n    if (pokemonList.loading) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 20\n      }, this);\n    }\n\n    if (!_.isEmpty(pokemonList.data)) {\n      const pokeData = pokemonState.data[pokemonName];\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-wrapper grid-container\",\n        children: pokemonList.data.map(el => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pokemon-item Card\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: el.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: pokeData.ability.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: `/pokemon/${el.name}`,\n              children: \"View\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this);\n    }\n\n    if (pokemonList.errorMsg !== \"\") {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: pokemonList.errorMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 24\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"unable to get data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 20\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Search: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setSearch(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => props.history.push(`/pokemon/${search}`),\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), ShowData(), !_.isEmpty(pokemonList.data) && /*#__PURE__*/_jsxDEV(ReactPaginate, {\n      pageCount: Math.ceil(pokemonList.count / 15),\n      pageRangeDisplayed: 2,\n      marginPagesDisplayed: 1,\n      onPageChange: data => FetchData(data.selected + 1),\n      containerClassName: \"pagination\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 13\n  }, this);\n};\n\n_s(PokemonList, \"LKsURl/sUIkG2PIdBRSifOAYO9o=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = PokemonList;\nexport default PokemonList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PokemonList\");","map":{"version":3,"sources":["/Users/wardiman/Documents/React/pokemon/src/containers/PokemonList.js"],"names":["React","useState","useDispatch","useSelector","_","GetPokemonList","GetPokemon","Link","ReactPaginate","Card","PokemonList","props","search","setSearch","dispatch","pokemonName","match","params","pokemon","pokemonState","state","Pokemon","pokemonList","useEffect","FetchData","page","ShowData","loading","isEmpty","data","pokeData","map","el","name","ability","errorMsg","e","target","value","history","push","Math","ceil","count","selected"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport _ from \"lodash\";\nimport {GetPokemonList, GetPokemon} from \"../actions/pokemonActions\";\nimport {Link} from \"react-router-dom\";\nimport ReactPaginate from \"react-paginate\";\nimport Card from \"../components/Card\";\n\nconst PokemonList = (props) => {\n    const [search, setSearch] = useState(\"\");\n    const dispatch = useDispatch();\n    const pokemonName = props.match.params.pokemon;\n    const pokemonState = useSelector(state => state.Pokemon);\n    const pokemonList = useSelector(state => state.PokemonList);\n    React.useEffect(() => {\n        FetchData(1)\n\n    }, []);\n\n    React.useEffect(() => {\n        dispatch(GetPokemon(pokemonName))\n      }, []);\n\n    const FetchData = (page = 1) => {\n        dispatch(GetPokemonList(page))\n      }\n    \n        const ShowData = () => {\n            if (pokemonList.loading) {\n            return <p>Loading...</p>\n            }\n        \n            if (!_.isEmpty(pokemonList.data)) {\n\n                const pokeData = pokemonState.data[pokemonName];\n\n                return(\n                    <div className={\"list-wrapper grid-container\"}>\n                        {pokemonList.data.map(el => {\n                            return(\n                            <div className={\"pokemon-item Card\"}>\n                                <p>{el.name}</p>\n                                <p>{pokeData.ability.name}</p>\n                                <Link to={`/pokemon/${el.name}`}>View</Link>\n                            </div>\n                            )\n                        })}\n                    </div>\n                )\n            }\n        \n            if (pokemonList.errorMsg !== \"\") {\n                return <p>{pokemonList.errorMsg}</p>\n            }\n        \n            return <p>unable to get data</p>\n        };\n\n        return(\n            <div>\n            <div className={\"search-wrapper\"}>\n                <p>Search: </p>\n                <input type=\"text\" onChange={e => setSearch(e.target.value)}/>\n                <button onClick={() => props.history.push(`/pokemon/${search}`)}>Search</button>\n            </div>\n            {ShowData()}\n            {!_.isEmpty(pokemonList.data) && (\n                <ReactPaginate\n                pageCount={Math.ceil(pokemonList.count / 15)}\n                pageRangeDisplayed={2}\n                marginPagesDisplayed={1}\n                onPageChange={(data) => FetchData(data.selected + 1)}\n                containerClassName={\"pagination\"}\n                />\n            )}\n            </div>\n        )\n\n};\n\nexport default PokemonList"]},"metadata":{},"sourceType":"module"}