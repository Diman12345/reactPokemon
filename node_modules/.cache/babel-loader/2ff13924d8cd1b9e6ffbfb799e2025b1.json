{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/wardiman/Documents/React/pokemon/src/containers/PokemonList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport _ from \"lodash\";\nimport { GetPokemonList, GetPokemon } from \"../actions/pokemonActions\";\nimport { Link } from \"react-router-dom\";\nimport ReactPaginate from \"react-paginate\";\nimport Card from \"../components/Card\";\nimport { getPokemon, getAllPokemon } from '../services/pokemon';\nimport '../App.css';\nimport typeColors from '../helpers/typeColors';\n\nconst PokemonList = props => {\n  _s();\n\n  const [search, setSearch] = useState(\"\");\n  const [pokemonData, setPokemonData] = useState([]);\n  const dispatch = useDispatch();\n  const pokemonState = useSelector(state => state.Pokemon);\n  const pokemonList = useSelector(state => state.PokemonList);\n  const initialUrl = 'https://pokeapi.co/api/v2/pokemon';\n  React.useEffect(() => {\n    FetchData(1);\n  }, []);\n\n  const FetchData = (page = 1) => {\n    dispatch(GetPokemonList(page));\n  };\n\n  const ShowData = () => {\n    if (pokemonList.loading) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 20\n      }, this);\n    }\n\n    if (!_.isEmpty(pokemonList.data)) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-wrapper grid-container\",\n        children: pokemonList.data.map(el => {\n          const url = el.url;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pokemon-item Card\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [el.name, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 46\n              }, this), el.url, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 46\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: `/Pokemon/${el.name}`,\n                className: \"Card__type\",\n                children: \"View\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this);\n    }\n\n    if (pokemonList.errorMsg !== \"\") {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: pokemonList.errorMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 24\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"unable to get data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 20\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Search: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setSearch(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => props.history.push(`/pokemon/${search}`),\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), ShowData(), !_.isEmpty(pokemonList.data) && /*#__PURE__*/_jsxDEV(ReactPaginate, {\n      pageCount: Math.ceil(pokemonList.count / 15),\n      pageRangeDisplayed: 2,\n      marginPagesDisplayed: 1,\n      onPageChange: data => FetchData(data.selected + 1),\n      containerClassName: \"pagination\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 13\n  }, this);\n};\n\n_s(PokemonList, \"3tnP3QZcXx1+AQveb7mi63i/haE=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = PokemonList;\nexport default PokemonList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PokemonList\");","map":{"version":3,"sources":["/Users/wardiman/Documents/React/pokemon/src/containers/PokemonList.js"],"names":["React","useState","useDispatch","useSelector","_","GetPokemonList","GetPokemon","Link","ReactPaginate","Card","getPokemon","getAllPokemon","typeColors","PokemonList","props","search","setSearch","pokemonData","setPokemonData","dispatch","pokemonState","state","Pokemon","pokemonList","initialUrl","useEffect","FetchData","page","ShowData","loading","isEmpty","data","map","el","url","name","errorMsg","e","target","value","history","push","Math","ceil","count","selected"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAAQC,cAAR,EAAwBC,UAAxB,QAAyC,2BAAzC;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,UAAT,EAAqBC,aAArB,QAA0C,qBAA1C;AACA,OAAO,YAAP;AACA,OAAOC,UAAP,MAAuB,uBAAvB;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC3B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBf,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACgB,WAAD,EAAcC,cAAd,IAAgCjB,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAMkB,QAAQ,GAAGjB,WAAW,EAA5B;AACA,QAAMkB,YAAY,GAAGjB,WAAW,CAACkB,KAAK,IAAIA,KAAK,CAACC,OAAhB,CAAhC;AACA,QAAMC,WAAW,GAAGpB,WAAW,CAACkB,KAAK,IAAIA,KAAK,CAACR,WAAhB,CAA/B;AACA,QAAMW,UAAU,GAAG,mCAAnB;AAEAxB,EAAAA,KAAK,CAACyB,SAAN,CAAgB,MAAM;AAClBC,IAAAA,SAAS,CAAC,CAAD,CAAT;AAEH,GAHD,EAGG,EAHH;;AAKA,QAAMA,SAAS,GAAG,CAACC,IAAI,GAAG,CAAR,KAAc;AAC5BR,IAAAA,QAAQ,CAACd,cAAc,CAACsB,IAAD,CAAf,CAAR;AACD,GAFH;;AAII,QAAMC,QAAQ,GAAG,MAAM;AAEnB,QAAIL,WAAW,CAACM,OAAhB,EAAyB;AACzB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACC;;AAED,QAAI,CAACzB,CAAC,CAAC0B,OAAF,CAAUP,WAAW,CAACQ,IAAtB,CAAL,EAAkC;AAE9B,0BACI;AAAK,QAAA,SAAS,EAAE,6BAAhB;AAAA,kBAEKR,WAAW,CAACQ,IAAZ,CAAiBC,GAAjB,CAAqBC,EAAE,IAAI;AACxB,gBAAMC,GAAG,GAAGD,EAAE,CAACC,GAAf;AACA,8BAEA;AAAK,YAAA,SAAS,EAAE,mBAAhB;AAAA,mCACI;AAAA,yBAAID,EAAE,CAACE,IAAP,oBAAa;AAAA;AAAA;AAAA;AAAA,sBAAb,EACKF,EAAE,CAACC,GADR,oBACa;AAAA;AAAA;AAAA;AAAA,sBADb,eAEI,QAAC,IAAD;AAAM,gBAAA,EAAE,EAAG,YAAWD,EAAE,CAACE,IAAK,EAA9B;AAAiC,gBAAA,SAAS,EAAC,YAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAFA;AAUH,SAZA;AAFL;AAAA;AAAA;AAAA;AAAA,cADJ;AAoBH;;AAED,QAAIZ,WAAW,CAACa,QAAZ,KAAyB,EAA7B,EAAiC;AAC7B,0BAAO;AAAA,kBAAIb,WAAW,CAACa;AAAhB;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;;AAED,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAnCD;;AAqCA,sBACI;AAAA,4BACA;AAAK,MAAA,SAAS,EAAE,gBAAhB;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAEC,CAAC,IAAIrB,SAAS,CAACqB,CAAC,CAACC,MAAF,CAASC,KAAV;AAA3C;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAQ,QAAA,OAAO,EAAE,MAAMzB,KAAK,CAAC0B,OAAN,CAAcC,IAAd,CAAoB,YAAW1B,MAAO,EAAtC,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,EAMCa,QAAQ,EANT,EAOC,CAACxB,CAAC,CAAC0B,OAAF,CAAUP,WAAW,CAACQ,IAAtB,CAAD,iBACG,QAAC,aAAD;AACA,MAAA,SAAS,EAAEW,IAAI,CAACC,IAAL,CAAUpB,WAAW,CAACqB,KAAZ,GAAoB,EAA9B,CADX;AAEA,MAAA,kBAAkB,EAAE,CAFpB;AAGA,MAAA,oBAAoB,EAAE,CAHtB;AAIA,MAAA,YAAY,EAAGb,IAAD,IAAUL,SAAS,CAACK,IAAI,CAACc,QAAL,GAAgB,CAAjB,CAJjC;AAKA,MAAA,kBAAkB,EAAE;AALpB;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBP,CA1ED;;GAAMhC,W;UAGeX,W,EACIC,W,EACDA,W;;;KALlBU,W;AA4EN,eAAeA,WAAf","sourcesContent":["import React, { useState } from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport _ from \"lodash\";\nimport {GetPokemonList, GetPokemon} from \"../actions/pokemonActions\";\nimport {Link} from \"react-router-dom\";\nimport ReactPaginate from \"react-paginate\";\nimport Card from \"../components/Card\";\nimport { getPokemon, getAllPokemon } from '../services/pokemon';\nimport '../App.css';\nimport typeColors from '../helpers/typeColors';\n\nconst PokemonList = (props) => {\n    const [search, setSearch] = useState(\"\");\n    const [pokemonData, setPokemonData] = useState([]);\n    const dispatch = useDispatch();\n    const pokemonState = useSelector(state => state.Pokemon);\n    const pokemonList = useSelector(state => state.PokemonList);\n    const initialUrl = 'https://pokeapi.co/api/v2/pokemon'\n\n    React.useEffect(() => {\n        FetchData(1)\n        \n    }, []);\n\n    const FetchData = (page = 1) => {\n        dispatch(GetPokemonList(page))\n      }\n    \n        const ShowData = () => {\n\n            if (pokemonList.loading) {\n            return <p>Loading...</p>\n            }\n        \n            if (!_.isEmpty(pokemonList.data)) {\n                \n                return(\n                    <div className={\"list-wrapper grid-container\"}>\n                        {\n                         pokemonList.data.map(el => {\n                            const url = el.url;\n                            return(\n                            \n                            <div className={\"pokemon-item Card\"}>\n                                <p>{el.name} <br/> \n                                    {el.url} <br /> \n                                    <Link to={`/Pokemon/${el.name}`} className=\"Card__type\">View</Link>\n                                </p>\n                                \n                            </div>\n                            )\n                        })}\n                        \n                    </div>\n                    \n                )\n            }\n            \n            if (pokemonList.errorMsg !== \"\") {\n                return <p>{pokemonList.errorMsg}</p>\n            }\n        \n            return <p>unable to get data</p>\n        };\n\n        return(\n            <div>\n            <div className={\"search-wrapper\"}>\n                <p>Search: </p>\n                <input type=\"text\" onChange={e => setSearch(e.target.value)}/>\n                <button onClick={() => props.history.push(`/pokemon/${search}`)}>Search</button>\n            </div>\n            {ShowData()}\n            {!_.isEmpty(pokemonList.data) && (\n                <ReactPaginate\n                pageCount={Math.ceil(pokemonList.count / 15)}\n                pageRangeDisplayed={2}\n                marginPagesDisplayed={1}\n                onPageChange={(data) => FetchData(data.selected + 1)}\n                containerClassName={\"pagination\"}\n                />\n            )}\n            </div>\n        )\n\n};\n\nexport default PokemonList"]},"metadata":{},"sourceType":"module"}